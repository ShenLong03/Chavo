@model Chavo.Web.Models.GeneralConfigurationViewModel
    <div class="row">
        <div class="form-horizontal col-md-6">
            @if (!string.IsNullOrEmpty(Model.Logo))
            {
                <center>
                    <img src="@Url.Content(Model.Logo)" alt="Picture Profile" class="img-thumbnail rounded-circle img-profile" />
                </center>
            }
            <div class="form-group">
                @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label" })
                <div>
                    <div class="file-input-new">
                        <div class="input-group">
                            <div tabindex="500" class="form-control file-caption">
                                <div class="file-caption-name" id="NombreArchivo">
                                </div>
                            </div>
                            <div class="input-group-btn" style="height:auto">
                                <div tabindex="500" class="btn btn-file raised-button btn-info waves-effec">
                                    <i class="fa fa-folder-open"></i>
                                    @Html.TextBoxFor(modelo => modelo.LogoFile, new { type = "file", id = "files" })
                                    @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VideoBanner, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.VideoBanner, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VideoBanner, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TransacctionNumber, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.TransacctionNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TransacctionNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DescriptionTransacctionNumber, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.TextAreaFor(m => m.DescriptionTransacctionNumber, new { @class = "form-control textarea-editor" })
                    @Html.ValidationMessageFor(model => model.DescriptionTransacctionNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-horizontal col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.PictureFile, htmlAttributes: new { @class = "control-label" })
                <div>
                    <div class="file-input-new">
                        <div class="input-group">
                            <div tabindex="500" class="form-control file-caption">
                                <div class="file-caption-name" id="NombreArchivo">
                                </div>
                            </div>
                            <div class="input-group-btn" style="height:auto">
                                <div tabindex="500" class="btn btn-file raised-button btn-info waves-effec">
                                    <i class="fa fa-folder-open"></i>
                                    @Html.TextBoxFor(modelo => modelo.PictureFile, new { type = "file", id = "files" })
                                    @Html.ValidationMessageFor(model => model.PictureFile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MessageLogin, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.TextAreaFor(m => m.MessageLogin, new { @class = "form-control textarea-editor" })
                    @Html.ValidationMessageFor(model => model.MessageLogin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MessageContactPage, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.TextAreaFor(m => m.MessageContactPage, new { @class = "form-control textarea-editor" })
                    @Html.ValidationMessageFor(model => model.MessageContactPage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MessageFooter, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.TextAreaFor(m => m.MessageFooter, new { @class = "form-control textarea-editor" })
                    @Html.ValidationMessageFor(model => model.MessageFooter, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="w-100">
            <h4>Urls</h4>
            <hr />
        </div>        
        <div class="form-horizontal col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Facebook, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FacebookGroup, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.FacebookGroup, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacebookGroup, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Instagram, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Instagram, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Instagram, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Twiter, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Twiter, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Twiter, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LearningZone, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.LearningZone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LearningZone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AcquireUserLearningZone, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.AcquireUserLearningZone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AcquireUserLearningZone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-horizontal col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Cashing, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Cashing, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cashing, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VideoCashing, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.VideoCashing, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VideoCashing, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CashingConditions, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.CashingConditions, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CashingConditions, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RealEstate, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.RealEstate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RealEstate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Chat, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Chat, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Chat, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>