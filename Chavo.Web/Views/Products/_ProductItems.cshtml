@model Chavo.Web.Models.ProductViewModel

    <div class="row">
        <div class="col-md-6">
            <div class="form-horizontal">
                @if (!string.IsNullOrEmpty(Model.Picture))
                {
                    <center>
                        <img src="@Url.Content(Model.Picture)" alt="Picture Profile" class="img-thumbnail rounded-circle img-profile" />
                    </center>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <div class="file-input-new">
                            <div class="input-group">
                                <div tabindex="500" class="form-control file-caption">
                                    <div class="file-caption-name" id="NombreArchivo">
                                    </div>
                                </div>
                                <div class="input-group-btn" style="height:auto">
                                    <div tabindex="500" class="btn btn-file raised-button btn-info waves-effec">
                                        <i class="fa fa-folder-open"></i>
                                        @Html.TextBoxFor(modelo => modelo.PictureFile, new { type = "file", id = "files" })
                                        @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Serie, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Serie, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Serie, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WeightId, "Weight", htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control col-6" } })
                        @Html.DropDownList("WeightId", null, "No apply", htmlAttributes: new { @class = "form-control col-6" })
                        @Html.ValidationMessageFor(model => model.WeightId, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>               
            </div>
        </div>

        <div class="col-md-6 border-left">
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="control-label">Lengths</label>
                    <div class="input-group">
                        @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control col-4" } })
                        @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control col-4" } })
                        @Html.DropDownList("UnitLengthId", null, "No apply", htmlAttributes: new { @class = "form-control col-4" })
                        @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownList("CurrencyId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CostAmount, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.CostAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CostAmount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PriceAmount, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.PriceAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PriceAmount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Video, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubCategoryId, "SubCategory", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownList("SubCategoryId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Active)
                            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    <div>                       
                        @Html.TextAreaFor(m => m.Description, new{@class = "form-control textarea-editor"})                     
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>



