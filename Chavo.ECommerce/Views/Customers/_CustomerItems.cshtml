@model Chavo.ECommerce.Models.CustomerViewModel

@Html.HiddenFor(model => model.DisplayClothes)
@Html.HiddenFor(model => model.DisplayInversor)
@Html.HiddenFor(model => model.DisplayLongRevenue)
@Html.HiddenFor(model => model.DisplayMediumRevenue)
@Html.HiddenFor(model => model.DisplayShortRevenue)
@Html.HiddenFor(model => model.ShortRevenue)
@Html.HiddenFor(model => model.MediumRevenue)
@Html.HiddenFor(model => model.LongRevenue)
@Html.HiddenFor(model => model.Sizes)
@Html.HiddenFor(model => model.Comentaries)
@Html.HiddenFor(model => model.UserName)
@Html.HiddenFor(model => model.CreateDate)
@Html.HiddenFor(model => model.Credit)
@Html.HiddenFor(model => model.Points)
@Html.HiddenFor(model => model.MaxToWin)
@Html.HiddenFor(model => model.Active)

<div class="row">
    <div class="col-md-6">
        @if (!string.IsNullOrEmpty(Model.Picture))
        {
            <center>
                <img src="@Url.Content(Model.FullRoutePicture)" alt="Picture Profile" class="img-thumbnail rounded-circle img-profile" />
            </center>
        }
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label" })
                <div>
                    <div class="file-input-new">
                        <div class="input-group">
                            <div tabindex="500" class="form-control file-caption">
                                <div class="file-caption-name" id="NombreArchivo">
                                </div>
                            </div>
                            <div class="input-group-btn" style="height:auto">
                                <div tabindex="500" class="btn btn-file raised-button btn-info waves-effec">
                                    <i class="fa fa-folder-open"></i>
                                    @Html.TextBoxFor(modelo => modelo.PictureFile, new { type = "file", id = "files" })
                                    @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BirthDateString, htmlAttributes: new { @class = "control-label" })
                <div>
                    <div class='input-group date onlyDate'>
                        @Html.EditorFor(model => model.BirthDateString, new { htmlAttributes = new { @class = "form-control", @placeholder = "DD/MM/YYYY" } })
                        <span class="input-group-addon btn btn-info">
                            <span class="fa fa-calendar"></span>
                        </span>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.BirthDateString, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EnumDropDownListFor(model => model.Genero, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 border-left">
        <div class="form-horizontal">

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>           

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CellPhone, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.CellPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CellPhone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="w-100"></div>
</div>
